

function UI_ConfigControl( control, params )
{
	removed = UI_Controls[ params.type $ "_params" ];
	foreach( key, val : params )
	{
		if( key == "children" )
			UI_BuildControls( control, val );
		else if( key == "contents" )
			val( control );
		else if( key == "type" )
			;
		else if( removed.find( key ) === null )
			control.(key) = val;
	}
}

function UI_BuildControls( parent, controls )
{
	foreach( control : controls )
		UI_Controls[ control.type ]( parent, control );
}


function first_non_null( a, b ){ return if( a === null, b, a ); }


function SS_UI_ConvertColor( cc ){ return color( cc.r, cc.g, cc.b, cc.a ); }

function SS_UI_CreateFrame()
{
	SS_Frame = UI_CreateFrame();
	SS_Frame.setTheme( SS_UI_Theme_Default );
	function SS_Frame.scissor_func( x0, y0, x1, y1 )
	{
		if( x0 === null )
			SS_SetClipRect( null );
		else
			SS_SetClipRect( x0, y0, x1, y1 );
	}
	function SS_Frame.clipboard_func( text )
	{
		if( text === null )
			return SS_GetClipboardText();
		return SS_SetClipboardText( text ) || "";
	}
	function SS_Frame.cursor_func( cursor )
	{
		if( cursor === null )
			return;
		SS_ShowCursor( cursor !== false );
		if( cursor === true )
			SS_SetSystemCursor( UI_Cursor_Arrow );
		else if( typeid( cursor ) == VT_INT )
			SS_SetSystemCursor( cursor );
	}
	function SS_Frame.font_func( font, size )
	{
		if( font === null ) font = "fonts/lato-regular.ttf";
		if( size <= 0 ) size = 12;
		
		return SS_CreateFont( font, size );
	}
	function SS_Frame.image_func( image )
	{
		if( typeid( image ) == VT_STRING )
			image = SS_CreateTexture( image );
		return image;
	}
	function SS_Frame.icon_func( icon )
	{
		if( typeid( icon ) == VT_STRING )
			icon = SS_CreateTexture( icon );
		return icon;
	}
	return SS_Frame;
}

function SS_UI_HandleEvent( frame, e )
{
	if( e.type == SDL_MOUSEMOTION )
	{
		FRAME.doMouseMove( e.x, e.y );
	}
	else if( e.type == SDL_MOUSEBUTTONDOWN || e.type == SDL_MOUSEBUTTONUP )
	{
		btn = -1;
		if( e.button == 1 ) btn = 0;
		else if( e.button == 3 ) btn = 1;
		else if( e.button == 2 ) btn = 2;
		FRAME.doMouseButton( btn, e.type == SDL_MOUSEBUTTONDOWN );
	}
	else if( e.type == SDL_MOUSEWHEEL )
	{
		FRAME.doMouseWheel( e.x, -e.y );
	}
	else if( e.type == SDL_KEYUP || e.type == SDL_KEYDOWN )
	{
		key = 0;
		if( e.keycode == SDLK_LEFT ) key = Key_Left;
		else if( e.keycode == SDLK_RIGHT ) key = Key_Right;
		else if( e.keycode == SDLK_UP ) key = Key_Up;
		else if( e.keycode == SDLK_DOWN ) key = Key_Down;
		else if( e.keycode == SDLK_BACKSPACE ) key = Key_DelLeft;
		else if( e.keycode == SDLK_DELETE ) key = Key_DelRight;
		else if( e.keycode == SDLK_TAB ) key = Key_Tab;
		else if( e.keycode == SDLK_X && e.mod & SDL_KMOD_CTRL ) key = Key_Cut;
		else if( e.keycode == SDLK_C && e.mod & SDL_KMOD_CTRL ) key = Key_Copy;
		else if( e.keycode == SDLK_V && e.mod & SDL_KMOD_CTRL ) key = Key_Paste;
		else if( e.keycode == SDLK_Z && e.mod & SDL_KMOD_CTRL ) key = Key_Undo;
		else if( e.keycode == SDLK_Y && e.mod & SDL_KMOD_CTRL ) key = Key_Redo;
		else if( e.keycode == SDLK_A && e.mod & SDL_KMOD_CTRL ) key = Key_SelectAll;
		else if( e.keycode == SDLK_PAGEUP ) key = Key_PageUp;
		else if( e.keycode == SDLK_PAGEDOWN ) key = Key_PageDown;
		if( key )
		{
			if( e.mod & SDL_KMOD_SHIFT ) key |= KeyMod_Shift;
			// submit event
			FRAME.doKeyPress( key, e.type == SDL_KEYDOWN );
		}
	}
	else if( e.type == SDL_TEXTINPUT )
	{
		chrs = string_utf8_decode( e.text );
		FRAME.doPutChar( chrs[0] );
	}
	else if( e.type == SDL_WINDOWEVENT && e.event == SDL_WINDOWEVENT_RESIZED )
	{
		FRAME.width = e.data1;
		FRAME.height = e.data2;
	}
}

